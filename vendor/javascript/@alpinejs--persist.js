function src_default(e){let persist=()=>{let t;let r;try{r=localStorage}catch(e){console.error(e);console.warn("Alpine: $persist is using temporary storage since localStorage is unavailable.");let t=new Map;r={getItem:t.get.bind(t),setItem:t.set.bind(t)}}return e.interceptor(((s,a,n,o,l)=>{let g=t||`_x_${o}`;let i=storageHas(g,r)?storageGet(g,r):s;n(i);e.effect((()=>{let e=a();storageSet(g,e,r);n(e)}));return i}),(e=>{e.as=r=>{t=r;return e},e.using=t=>{r=t;return e}}))};Object.defineProperty(e,"$persist",{get:()=>persist()});e.magic("persist",persist);e.persist=(t,{get:r,set:s},a=localStorage)=>{let n=storageHas(t,a)?storageGet(t,a):r();s(n);e.effect((()=>{let e=r();storageSet(t,e,a);s(e)}))}}function storageHas(e,t){return null!==t.getItem(e)}function storageGet(e,t){return JSON.parse(t.getItem(e,t))}function storageSet(e,t,r){r.setItem(e,JSON.stringify(t))}var e=src_default;export{e as default};

